"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[5655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),m=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(a.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=o,f=u["".concat(a,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var m=2;m<i;m++)s[m]=n[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2884:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const i={id:"overview",title:"Overview",sidebar_position:1},s="Module System",l={unversionedId:"modules/overview",id:"modules/overview",title:"Overview",description:"Lesma's module system is still a work in progress. Similar to Python's system,",source:"@site/docs/modules/overview.md",sourceDirName:"modules",slug:"/modules/overview",permalink:"/docs/modules/overview",draft:!1,editUrl:"https://github.com/alinalihassan/Lesma/tree/main/docs/docs/modules/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"overview",title:"Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Control Flow",permalink:"/docs/basics/control_flow"}},a={},m=[{value:"Imports &amp; Exports",id:"imports--exports",level:2},{value:"Top-Level Statements",id:"top-level-statements",level:2}],p={toc:m};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"module-system"},"Module System"),(0,o.kt)("p",null,"Lesma's module system is still a work in progress. Similar to Python's system,\nyou can import whole files, or select functions and object from another file."),(0,o.kt)("p",null,"A module is a file containing Python definitions and statements.\nThe filename is the module name with the suffix .les appended"),(0,o.kt)("p",null,"There are a few differences in Lesma's module system compared to other implementations\nin languages like Python."),(0,o.kt)("h2",{id:"imports--exports"},"Imports & Exports"),(0,o.kt)("p",null,"The syntax and semantics are exemplified below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# tests/lesma/function_call.les\nexport def fib() -> int\n    return 101\n\nexport class Animal\n    var x: int\n\n    def new()\n        self.x = 101\n\n    def getX() -> int\n        return self.x\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# main.les\n\n# Import from standard library\nimport time\n\ntime.sleep(1)\n\n# Import file\nimport "tests/lesma/function_call.les"\n\n# Module is then given an alias based on filename\nfunction_call.fib()\n\nlet x = function_call.Animal()\nx.getX()\n\n# Import time in scope\nfrom time import sleep\n\nsleep(1)\n\nlet x = Animal()\nx.getX()\n\n# Import sleep function with alias\nfrom time import sleep as my_sleep\n\nmy_sleep(1)\n\n# Import all functions from module\nfrom time import *\n\n# Import all functions from module with alias\nimport time as my_time\n\nmy_time.sleep(1)\n')),(0,o.kt)("h2",{id:"top-level-statements"},"Top-Level Statements"),(0,o.kt)("p",null,"Top-level statements are not executed once imported. This is in contrast to Python where it's executed exactly once.\nBecause of this it's not recommended to initialize parts of your module outside of classes and functions."))}c.isMDXComponent=!0}}]);