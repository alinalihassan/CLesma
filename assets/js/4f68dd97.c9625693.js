"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[2699],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),l=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,d=p["".concat(m,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9244:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],c={id:"comments",title:"Comments",sidebar_position:5},m="Comments",l={unversionedId:"common/comments",id:"common/comments",title:"Comments",description:"In general, programmers try to keep code easy to read, but there are times when you need",source:"@site/docs/common/comments.md",sourceDirName:"common",slug:"/common/comments",permalink:"/docs/common/comments",draft:!1,editUrl:"https://github.com/alinalihassan/Lesma/tree/main/docs/docs/common/comments.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"comments",title:"Comments",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/docs/common/functions"},next:{title:"Control Flow",permalink:"/docs/common/control_flow"}},s={},u=[],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"comments"},"Comments"),(0,a.kt)("p",null,"In general, programmers try to keep code easy to read, but there are times when you need\nextra explanation. In these cases programmers leave comments in the source code that Lesma\nwill ignore, but others will read."),(0,a.kt)("p",null,"Comments start after ",(0,a.kt)("inlineCode",{parentName:"p"},"#"),". Here's a simple comment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# My first comment!\n")),(0,a.kt)("p",null,"Everything after ",(0,a.kt)("inlineCode",{parentName:"p"},"#")," will be considered a comment until the end of the line. To span multiple\nlines you need to add ",(0,a.kt)("inlineCode",{parentName:"p"},"#")," on each line."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# This\n# is\n# a\n# multiline\n# comment\n")),(0,a.kt)("p",null,"You'll usually see comments either after the line it's about, or, more commonly, above it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# approximate \u03c0 value\npi = 3.14\n\ndelta = 0.001 # My \u03b4 symbol showing the difference\n")))}f.isMDXComponent=!0}}]);