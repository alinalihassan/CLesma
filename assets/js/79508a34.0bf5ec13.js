"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[163],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return b}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(r),b=a,f=m["".concat(l,".").concat(b)]||m[b]||p[b]||i;return r?n.createElement(f,s(s({ref:t},c),{},{components:r})):n.createElement(f,s({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6182:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),s=["components"],o={id:"variables",title:"Variables",sidebar_position:1},l="Variables",u={unversionedId:"expressions/variables",id:"expressions/variables",title:"Variables",description:"Like most imperative programming languages, Lesma has variables.",source:"@site/docs/expressions/variables.md",sourceDirName:"expressions",slug:"/expressions/variables",permalink:"/docs/expressions/variables",editUrl:"https://github.com/alinalihassan/Lesma/tree/main/docs/docs/expressions/variables.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"variables",title:"Variables",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Hello World!",permalink:"/docs/introduction/hello-world"},next:{title:"Literals",permalink:"/docs/expressions/literals"}},c={},p=[{value:"Assignment",id:"assignment",level:2},{value:"Mutability (Var vs Let)",id:"mutability-var-vs-let",level:2}],m={toc:p};function b(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"variables"},"Variables"),(0,i.kt)("p",null,"Like most imperative programming languages, Lesma has variables."),(0,i.kt)("h2",{id:"assignment"},"Assignment"),(0,i.kt)("p",null,"Variables can be assigned using '=' operator."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"let x = 5\n")),(0,i.kt)("h2",{id:"mutability-var-vs-let"},"Mutability (Var vs Let)"),(0,i.kt)("p",null,"Variables can be either mutable, which means that they can change they value over time, or immutable, having the same value after assignment."),(0,i.kt)("p",null,"You need to specify the mutability when you declare a variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Mutable \nvar x = 5\n\n# Immutable\nlet y = 7\n\nx = 42 # Works just fine\ny = 42 # Raises an error\n")))}b.isMDXComponent=!0}}]);