"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[9746],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,d=u["".concat(l,".").concat(g)]||u[g]||p[g]||i;return n?a.createElement(d,o(o({ref:t},m),{},{components:n})):a.createElement(d,o({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"what-is-lesma",title:"What is Lesma",sidebar_position:1},o="What is Lesma",s={unversionedId:"introduction/what-is-lesma",id:"introduction/what-is-lesma",title:"What is Lesma",description:"Lesma is a compiled, statically typed, imperative and object-oriented programming language with a focus on expressiveness, elegancy, and simplicity, while not sacrificing on performance.",source:"@site/docs/introduction/what-is-lesma.md",sourceDirName:"introduction",slug:"/introduction/what-is-lesma",permalink:"/docs/introduction/what-is-lesma",draft:!1,editUrl:"https://github.com/alinalihassan/Lesma/tree/main/docs/docs/introduction/what-is-lesma.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"what-is-lesma",title:"What is Lesma",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/introduction/getting-started"}},l={},c=[{value:"Why Another Programming Language?",id:"why-another-programming-language",level:2},{value:"Similar Projects",id:"similar-projects",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"what-is-lesma"},"What is Lesma"),(0,r.kt)("p",null,"Lesma is a compiled, statically typed, imperative and object-oriented programming language with a focus on expressiveness, elegancy, and simplicity, while not sacrificing on performance."),(0,r.kt)("p",null,"Here's a sample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"def fibonacci(x: int) -> int\n    if x <= 1\n        return x\n    return fibonacci(x - 1) + fibonacci(x - 2)\n\nprint(fibonacci(20))\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Many features described in this document ",(0,r.kt)("strong",{parentName:"p"},"have not been implemented"),". Most of them will have a hint around to suggest if they haven't been implemented in the reference C++ compiler.")),(0,r.kt)("h2",{id:"why-another-programming-language"},"Why Another Programming Language?"),(0,r.kt)("p",null,"I have created Lesma mainly because I wanted an alternative to Python that would be much faster, that is statically typed to reduce the amount of runtime exceptions, but use type inference to make it feel like a dynamically typed language, instead of writing out mypy type hints to get autocomplete in IDEs."),(0,r.kt)("h2",{id:"similar-projects"},"Similar Projects"),(0,r.kt)("p",null,"There are quite a few other projects that are more mature and I can vouch for, and if any of the following descriptions seem interesting to you, please check them out."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/peregrine-lang/Peregrine"},"Peregrine"))," is a similar programming language developed by a great team, with a similar syntax. Both projects are meant to become simple, fast and easy to use programming languages, but the two main differences are that Peregrine is meant to be a systems programming language, Lesma being a general purpose, and Peregrine is transpiled to C++/JS, while Lesma is using LLVM as an intermediate representation, the compiler being able to JIT or compile to object code by itself, not needing another compiler like GCC/Clang to compile to binary."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/aardappel/lobster"},"Lobster"))," is a general purpose language, but its current implementation is biased towards games and other graphical things, with plenty of \u201cbatteries included\u201d functionality. It's a very mature projects, but it's creator is tailoring it for game development. Still, a very impressive language in terms of features.")))}p.isMDXComponent=!0}}]);