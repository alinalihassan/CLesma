"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[1020],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(t),f=a,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||o;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={id:"functions",title:"Functions",sidebar_position:4},i="Functions",s={unversionedId:"common/functions",id:"common/functions",title:"Functions",description:"Functions are the basic building blocks of Lesma, and many times they are used behind the scenes,",source:"@site/docs/common/functions.md",sourceDirName:"common",slug:"/common/functions",permalink:"/docs/common/functions",draft:!1,editUrl:"https://github.com/alinalihassan/Lesma/tree/main/docs/docs/common/functions.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"functions",title:"Functions",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Types",permalink:"/docs/common/types"},next:{title:"Comments",permalink:"/docs/common/comments"}},l={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Return values",id:"return-values",level:2},{value:"Extern functions",id:"extern-functions",level:2},{value:"Varargs",id:"varargs",level:2}],c={toc:u};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"functions"},"Functions"),(0,a.kt)("p",null,"Functions are the basic building blocks of Lesma, and many times they are used behind the scenes,\nbut you've also seen one of them, ",(0,a.kt)("inlineCode",{parentName:"p"},"print"),". Here's an example function definition to compute fibbonaci."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def fibonacci(x: int) -> int\n    if x <= 1\n        return x\n    return fibonacci(x - 1) + fibonacci(x - 2)\n\nprint(fibonacci(8)) # Prints 21\n")),(0,a.kt)("p",null,"We define functions with the keyword ",(0,a.kt)("inlineCode",{parentName:"p"},"def"),", followed by the function name and a set of parenthesis.\nThe body block is then defined by a level of indentation. "),(0,a.kt)("p",null,"We can call any defined function, like ",(0,a.kt)("inlineCode",{parentName:"p"},"print"),", by entering its name followed by a set of parenthesis."),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"We can define functions to receive parameters when we call them. In the example above,\n",(0,a.kt)("inlineCode",{parentName:"p"},"x")," is our parameter in the function named ",(0,a.kt)("inlineCode",{parentName:"p"},"fibonacci"),". "),(0,a.kt)("p",null,"Unlike variable definitions, function parameters require us to specify the type."),(0,a.kt)("p",null,"We can also define default values for those parameters in a similar way we assign values to variables.\nSimply by adding an ",(0,a.kt)("inlineCode",{parentName:"p"},"=")," and a value after the operator"),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"Default parameter values are not implemented yet. Additionally, string interpolation is not implemented.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def hello(name: str = "Mark")\n    print("Hello \\{name}!")\n\nhello() # Prints Hello Mark!\n')),(0,a.kt)("h2",{id:"return-values"},"Return values"),(0,a.kt)("p",null,"Functions can return values to the caller of the function. The type of the return value is\ndefined in the function signature after the parameters, delimited by an arrow (",(0,a.kt)("inlineCode",{parentName:"p"},"->"),").\nValues are returned using the ",(0,a.kt)("inlineCode",{parentName:"p"},"return")," keyword followed by a value of the corresponding type."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"A function that doesn't have a return type is expected to return nothing.")),(0,a.kt)("h2",{id:"extern-functions"},"Extern functions"),(0,a.kt)("p",null,"Extern functions are functions that we import from the C family of languages. It's Lesma's\n",(0,a.kt)("em",{parentName:"p"},"Foreign Function Interface")," or ",(0,a.kt)("em",{parentName:"p"},"FFI"),"."),(0,a.kt)("p",null,"Let's say we want to get the square root of a number, and we don't know how to implement the function ourselves.\nIf you are sufficiently familiar with C, you can use the math library from there!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def extern sqrt(x: float) -> float\n\nprint(sqrt(4.0)) # Prints 2\n")),(0,a.kt)("h2",{id:"varargs"},"Varargs"),(0,a.kt)("p",null,"Extern functions can have a variable amount of arguments, and to support that, you can\nuse an ellipsis(",(0,a.kt)("inlineCode",{parentName:"p"},"..."),"). For example ",(0,a.kt)("inlineCode",{parentName:"p"},"printf")," uses a variable amount of parameters, let's see how\nwe can define that."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def extern printf(fmt: str, ...)\n\nprintf("Hello %s and %s!\\n", "Mark", "Sussie") # Prints Hello Mark and Sussie!\n')))}p.isMDXComponent=!0}}]);