"use strict";(self.webpackChunklesma_website=self.webpackChunklesma_website||[]).push([[962],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5675:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),o=["components"],i={id:"getting-started",title:"Getting Started",sidebar_position:2},s="Getting Started",u={unversionedId:"introduction/getting-started",id:"introduction/getting-started",title:"Getting Started",description:"There's currently no sharable binaries of the compiler, and you'll have to build it yourself.",source:"@site/docs/introduction/getting-started.md",sourceDirName:"introduction",slug:"/introduction/getting-started",permalink:"/docs/introduction/getting-started",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/introduction/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"getting-started",title:"Getting Started",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What is Lesma",permalink:"/docs/introduction/what-is-lesma"},next:{title:"Hello World!",permalink:"/docs/introduction/hello-world"}},c={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Prerequisites",id:"installing-prerequisites",level:3},{value:"On Ubuntu",id:"on-ubuntu",level:4},{value:"On MacOS",id:"on-macos",level:4},{value:"Build",id:"build",level:2},{value:"Using Lesma",id:"using-lesma",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"There's currently no sharable binaries of the compiler, and you'll have to build it yourself."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"You'll need certain tools installed on your machine before attempting to build the project. Mainly, you'll need a C++ compiler, CMake and LLVM 13 installed. Since the project is being developed and tested with Clang, I would suggest you use the same."),(0,a.kt)("h3",{id:"installing-prerequisites"},"Installing Prerequisites"),(0,a.kt)("h4",{id:"on-ubuntu"},"On Ubuntu"),(0,a.kt)("p",null,"Install system dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install zlib1g-dev\n")),(0,a.kt)("p",null,"Install CMake"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install cmake\n")),(0,a.kt)("p",null,"Install LLVM & Clang"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://apt.llvm.org/llvm.sh\nchmod +x llvm.sh\nsudo ./llvm.sh 13\n")),(0,a.kt)("p",null,"Set Clang symlink to Clang 13"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ln -s /usr/bin/clang-13 /usr/bin/clang\nsudo ln -s /usr/bin/clang++-13 /usr/bin/clang++\n")),(0,a.kt)("h4",{id:"on-macos"},"On MacOS"),(0,a.kt)("p",null,"MacOS already has Apple Clang installed which should be good enough as a C++ compiler."),(0,a.kt)("p",null,"Install system dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"xcode-select --install\n")),(0,a.kt)("p",null,"Install CMake"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake\n")),(0,a.kt)("p",null,"Install LLVM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brew install llvm@13\n\necho 'export PATH=\"/opt/homebrew/opt/llvm/bin:$PATH\"' >> ~/.zshrc\necho 'export LDFLAGS=\"-L/opt/homebrew/opt/llvm/lib -Wl,-rpath,/opt/homebrew/opt/llvm/lib\"' >> ~/.zshrc\necho 'export CPPFLAGS=\"-I/opt/homebrew/opt/llvm/include\"' >> ~/.zshrc\n")),(0,a.kt)("h2",{id:"build"},"Build"),(0,a.kt)("p",null,"You can now build the compiler yourself! Let's try it out."),(0,a.kt)("p",null,"Clone the repository"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/alinalihassan/Lesma\n")),(0,a.kt)("p",null,"Create a build directory for the generated output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir build\n")),(0,a.kt)("p",null,"Build the project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cmake -B build\ncmake --build build\n")),(0,a.kt)("h2",{id:"using-lesma"},"Using Lesma"),(0,a.kt)("p",null,"You should now see a few more files in the build directory, ",(0,a.kt)("strong",{parentName:"p"},"lesma")," among them. We can use it to run our Lesma sources."),(0,a.kt)("p",null,"Check how to use the CLI and available options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./build/lesma --help\n")),(0,a.kt)("p",null,"Run one of the Lesma test files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./build/lesma tests/lesma/inference.les\n")))}m.isMDXComponent=!0}}]);