name: Build

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
env:
  BUILD_TYPE: Release
  CC: clang
  CXX: clang++

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      - name : Clang Format
        if:  ${{ matrix.os == 'ubuntu-latest' }}
        uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: './src/'
          extensions: 'h,cpp'
          clangFormatVersion: 13
          inplace: True

      - name: Commit formatting diff
        uses: EndBug/add-and-commit@v4
        with:
          author_name: Clang Robot
          author_email: clang-robot@lesma.com
          message: 'Committing clang-format changes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: llvm-13.0-${{ matrix.os }}

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "13.0"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build
        run: |
          cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --rerun-failed --output-on-failure


      # Artifact binaries still not working properly
      - name: Package Artifact
        working-directory: ${{github.workspace}}/build
        run: ninja package

      - uses: actions/upload-artifact@v2
        with:
          name: lesma
          path: ${{github.workspace}}/build/Lesma*.tar.gz

  release:
    name: Release
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Semantic Release Dependencies
        run: |
          npm install -g @semantic-release/changelog @semantic-release/git

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}