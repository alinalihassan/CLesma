def extern printf(fmt: str, ...)
def extern scanf(fmt: str, ...)
def extern malloc(size: int) -> *int8
def extern strlen(x: str) -> int
def extern atoll(x: str) -> int
def extern strtod(x: str) -> float
def extern rand() -> int
def extern srand(x: int)
def extern time(x: *int) -> int

export def extern exit(x: int)

export def input() -> str
    return input("")

export def input(prompt: str) -> str
    if strlen(prompt) > 0
        printf("%s", prompt)

    var line: str = malloc(256) as str

    # TODO: Currently only reading 255 characters, could be longer
    scanf("%255[^\n]%*c",line)

    return line

export def strToInt(x: str) -> int
    return atoll(x)

export def strToFloat(x: str) -> float
    return strtod(x)

export def random(x: int, y: int) -> int
    srand(time(0))
    if x < y
        return x + rand() % (y - x)

    return y + rand() % (x - y)

export def print(x: str)
    printf("%s\n", x)

export def print(x: int8)
    printf("%c\n", x)

export def print(x: int)
    printf("%d\n", x)

export def print(x: float)
    printf("%g\n", x)

export def print(x: bool)
    if x
        print("true")
    else
        print("false")

# Hack to keep exit function alive, needs to be used to survive import
def testExit()
    exit(1)
###